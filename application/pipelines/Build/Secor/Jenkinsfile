// vim: ft=groovy et ts=2 sw=2:

node('java11') {
    try {
        String ANSI_GREEN = "\u001B[32m"
        String ANSI_NORMAL = "\u001B[0m"
        String ANSI_BOLD = "\u001B[1m"
        String ANSI_RED = "\u001B[31m"
        String ANSI_YELLOW = "\u001B[33m"

         ansiColor('xterm') {
            stage('Build') {
                container('java11') {
                    def branchName = params.branchName ?: "secor-0.29"
                    git([url: 'https://github.com/project-sunbird/secor', branch: "${branchName}"])
                    commit_hash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    build_tag = commit_hash + "_" + env.BUILD_NUMBER
                    echo "build_tag: " + build_tag
                    sh """
                        pwd; ls
                        mvn clean install
                      """
                }
          }
          stage("Building container") {
            container('kaniko') {
              // Building and pushing the container
              sh """
                cd ${env.WORKSPACE}
                pwd
                /kaniko/executor --dockerfile Dockerfile --context `pwd` --destination ${env.DOCKER_HUB_URL}/secor:${build_tag}
                echo {\\"image_name\\" : \\"secor\\", \\"image_tag\\" : \\"${build_tag}\\"} > ${env.WORKSPACE}/metadata.json
              """
              archiveArtifacts "metadata.json"
              currentBuild.description = "${build_tag}"
            }
          
        }
      }
    }
    catch (err) {
        currentBuild.result = "FAILURE"
        throw err
    }

}
