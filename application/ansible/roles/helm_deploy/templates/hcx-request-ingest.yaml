awsBucket: "hcx{{env}}secor"
awsRegion: "ap-south-1"
awsAccessKey: "{{secor_aws_access_key}}"
awsSecretKey: "{{secor_aws_secret_key}}"

secor_jobs:
  hcx-request-ingest:
    replicas: 1
    consumer_group: "{{env}}.hcx.request.ingest"
    service_name: "dev_hcx_request_ingest"
    base_path: "hcx"
    timestamp_key: "syncts"
    fallback_timestamp_key: "@timestamp"
    topic: "{{env}}.hcx.request.ingest"
    kafka_broker_host: "{{ groups['kafka']|join(',') }}"
    zookeeper_quorum: "{{ groups['zookeeper']|join(':2181,')}}:2181"
    max_file_size: 100000000
    max_file_age: 14400
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: ""
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.PatternDateMessageParser"
    storage:
      size: 10Gi
    requests:
      cpu: 100m
      memory: 100Mi
    lag_threshold_warning: 50000
    lag_threshold_critical: 100000

image:
  tag: "{{ image_tag }}"
  repository: "{{ docker_repo }}/secor"

exporter:
  image:
    repository: prom/statsd-exporter
    tag: latest
    pullPolicy: IfNotPresent

prometheus_rule_selector_app: prometheus-operator
prometheus_rule_selector_release: prometheus-operator

# If you enable this, secor lag alert rules will be created in the flink cluster.
# In our case the consumer group lag metrics available in core prometheus.
# So we need to create the secor lag alert rule in core prometheus.
# By adding this condition we are avoiding creating the secor lag alert rule in flink cluster. 
alertrules:
  enabled: false

# This condition is whether to create the secor lag alert rule or not.
secor_alertrule:
  enabled: false

